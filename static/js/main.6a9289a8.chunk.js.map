{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchfield","searchChange","className","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gCCYCQ,G,cAfE,SAAC,GAAa,EAAZC,OAGX,MAAM,IAAIC,MAAM,cCQTC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKC,UAAU,SAAf,SACI,uBACAC,SAAYF,EACZC,UAAU,uCACVE,KAAO,SACPC,YAAY,qBCETC,G,OARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAASC,OAAO,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,aCiBJC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,6DAODC,EAAOC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAA2B,IAAxBG,KAAKJ,MAAMC,SACF,+DAEDG,KAAKX,MAAMK,a,GAhBFQ,aCkDbC,E,kDAzCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,QACzCC,QAAQC,IAAIJ,IAbZ,EAAKT,MAAM,CACPjB,OAAS,GACTG,YAAa,IAJR,E,gEAQO,IAAD,OACf,OAAO4B,MAAM,8CAA8CtC,MAAK,SAAAuC,GAAQ,OAAGA,EAASC,UAAQxC,MAAK,SAAAyC,GAAK,OAAI,EAAKZ,SAAS,CAACtB,OAAOkC,S,+BAU3H,IAAD,EAE0Bb,KAAKJ,MAA5BjB,EAFH,EAEGA,OAAQG,EAFX,EAEWA,YACTgC,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASrC,EAAYoC,kBAGrD,OAAQvC,EAAOyC,OACf,gCACI,oBAAIpC,UAAY,oBAAhB,yBAEQ,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,UAAU,KAAKL,OAASmC,WAP1B,oBAAI9B,UAAW,mBAAf,2B,GA3BlBkB,a,OCJlBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.6a9289a8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    if(true){\r\n        throw new Error(\"Nooooooo\")\r\n    }\r\n\r\n    const robotList = robots.map((user,i) => {return <Card id = {robots[i].id} name={robots[i].name} email= {robots[i].email}/>})\r\n        return(\r\n            <div className=\"tc\">  \r\n                {robotList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n        <div className=\"tc pa2\">\r\n            <input \r\n            onChange = {searchChange}\r\n            className=\"pa3 ba b---green bg-lightest-blue tc\"\r\n            type = \"search\" \r\n            placeholder=\"search robots\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll',border:'1px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componenDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError === true){\r\n            return (<h1>Well well well, it has failed</h1>)\r\n        }else{\r\n            return this.props.children;    \r\n        }\r\n    }   \r\n\r\n\r\n}\r\nexport default ErrorBoundary;","import { render } from '@testing-library/react';\r\nimport React, {Component}from 'react'; \r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"; \r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots : [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        return fetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>response.json()).then(users => this.setState({robots:users}));\r\n\r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        console.log(event); \r\n        }\r\n    \r\n\r\n    render(){\r\n\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())});\r\n\r\n            \r\n            return !robots.length ? <h1 className =\"tc f0 shadow-5  \"> Loading </h1>:(\r\n            <div>\r\n                <h1 className = \"tc light-green f2\">RoboFriends</h1>\r\n                    \r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll >\r\n                        <ErrorBoundary>\r\n                            <CardList className=\"tc\" robots= {filteredRobots} />\r\n                        </ErrorBoundary>    \r\n                   </Scroll>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';  \nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}